postgres 16

CREATE DATABASE curso_jsp
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'pt_BR.UTF-8'
    LC_CTYPE = 'pt_BR.UTF-8'
    LOCALE_PROVIDER = 'libc'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;


CREATE TABLE IF NOT EXISTS public.model_login
(
    login character varying(200) COLLATE pg_catalog."default" NOT NULL,
    senha character varying(200) COLLATE pg_catalog."default" NOT NULL,
    id integer NOT NULL DEFAULT nextval('model_login_id_seq'::regclass),
    nome character varying(300) COLLATE pg_catalog."default" NOT NULL,
    email character varying(300) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT model_login_pkey PRIMARY KEY (id),
    CONSTRAINT login_unique UNIQUE (login)
        INCLUDE(login)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.model_login
    OWNER to postgres;
    

INSERT INTO public.model_login(
	login, senha)
	VALUES ('admin', 'admin');
	
select * from model_login;

aula22_50
alter TABLE model_login add column useradmin boolean not null default false;
select * from model_login where useradmin is false
select * from model_login where useradmin is true
select * from model_login where upper(nome) like upper ('%a') and useradmin is false
select * from model_login where upper(login) = upper('"+login+"') and useradmin is false
select * from model_login where id = ? and useradmin is false
DELETE FROM model_login WHERE id = ? and useradmin is false;

aula22_51
alter table model_login ADD column usuario_id bigint not null default 1;
alter table model_login ADD constraint usuario_fk FOREIGN key (usuario_id) references model_login (id);
UPDATE model_login set usuario_id = 2 where id > 8

aula22_53
alter table model_login ADD column perfil character varying(200);

aula22_55
ALTER TABLE public.model_login ADD COLUMN sexo CHARACTER varying(200);
UPDATE model_login set perfil = 'AUXILIAR' where perfil is null;
UPDATE model_login set sexo = 'MASCULINO' where sexo is null;

aula22_56
alter TABLE model_login add column fotouser text;
alter TABLE model_login add column extensaofotouser CHARACTER varying(10);

aula22_61
ALTER TABLE public.model_login ADD COLUMN cep CHARACTER varying(250);
ALTER TABLE public.model_login ADD COLUMN logradouro CHARACTER varying(250);
ALTER TABLE public.model_login ADD COLUMN bairro CHARACTER varying(250);
ALTER TABLE public.model_login ADD COLUMN localidade CHARACTER varying(250);
ALTER TABLE public.model_login ADD COLUMN uf CHARACTER varying(250);
ALTER TABLE public.model_login ADD COLUMN numero CHARACTER varying(250);

aula22_62
SELECT * FROM model_login WHERE usuario_id = 1 ORDER BY nome OFFSET 0 LIMIT 5

aula22_63
select count(1) from model_login where usuario_id = 1;

aula22_68
CREATE SEQUENCE IF NOT EXISTS public.telefone_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

    
create table telefone(

id integer not null default nextval('telefone_seq'::regclass),
numero character varying(50) not null,
usuario_pai_id bigint not null,
usuario_cad_id bigint not null,

constraint telefone_pkey primary key (id),
constraint usuario_pai_fk foreign key (usuario_pai_id) references model_login (id),
constraint usuario_cad_fk foreign key (usuario_cad_id) references model_login (id)

)

aula22_73
alter table model_login add column datanascimento date;

aula22_74
alter table model_login add column rendamensal numeric(6,3);
devido erro posterior excluído a coluna do comando acima e refeito utilizando
alter table model_login add column rendamensal numeric;
devido novo erro excluído e alterado para
alter table model_login add column rendamensal double precision;

aula22_89
select avg (rendamensal) as media_salarial, perfil from model_login where usuario_id = 1 group by perfil

aula22_93
CREATE SEQUENCE IF NOT EXISTS public.versionadorbanco_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;
    
CREATE TABLE IF NOT EXISTS public.versionadorbanco
(
    id integer NOT NULL DEFAULT nextval('versionadorbanco_seq'::regclass),
	arquivo_sql character varying(50) not null,
	constraint id_pk primary key (id)	
)

INSERT INTO versionadorbanco(arquivo_sql) VALUES (?);

ALTER TABLE model_login ADD COLUMN cpf character varying(11);


Aula22_99
POSTGRESQL - Melhorando a performance do PostgreSQL
localizaro arquivo postgresql.conf
alterar o que for necessário, sugestões do professor:

max_connections = 4000
Configurado para o atual número de conexões simultâneas que você espera precisar.

shared_buffers = 4000MB
Define a quantidade de memória que o servidor de banco de dados usa para buffers de memória compartilhada.
Estes são compartilhados entre os processos de back-end, como o nome sugere. 

work_mem = 500MB
Chamado de sort_mem, cobre ordenações, agregações e mais algumas operações.
Sendo alocada para cada operação (uma a várias veses por consulta).
Esta configuração está coloca um teto na quantidade de memória que uma única operação ocupar antes de ser forçada para o disco.
Este deve ser calculado dividindo a RAM disponível (depois das aplicações e do shared_buffers) pela expectativa de máximo de consultas concorrentes vezes o número de memória utilizada por conexão

maintenance_work_mem = 2000MB
Especifica a quantidade máxima de memória que pode ser utilizada pelas operações de manutenção, como VACUUM, CREATE INDEX e ALTER TABLE ADD FOREIGN KEY

max_stack_depth = 1MB
Especifica quantidade de memoria para rodas funções complexas execução do servidor.



